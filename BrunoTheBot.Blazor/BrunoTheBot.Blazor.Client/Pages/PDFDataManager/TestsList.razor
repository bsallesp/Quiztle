@using BrunoTheBot.Blazor.Client.APIServices.Responses
@using BrunoTheBot.Blazor.Client.APIServices.Tests
@using BrunoTheBot.CoreBusiness.Entities.PDFData
@using BrunoTheBot.CoreBusiness.Entities.Quiz

@inject RemoveTestService RemoveTestService
@inject ResponsesService ResponsesService

<div class="bg-light p-2 b-2 mb-2">
    <h5>
        Tests
    </h5>
    <div class="container bg-light p-2 bb-4" style="background-color: dimgrey;">
        @foreach (var test in pdfData.Tests)
        {
            <div style="padding: 10px; margin-bottom: 10px;">
                <p>
                    <h4>
                        @test.Name - @test.Questions.Count questions
                    </h4>
                </p>
                <p>
                    <h5>
                        <a href="/Games/Test/@test.Id" target="_blank">Start New Response</a>
                        @* <button @onclick="() => RemoveTest(item.Id)">Remove</button> *@
                    </h5>
                </p>
                <p>
                    <div style="border: 1px solid grey; padding: 10px;">
                        <h5>
                            Past Responses:
                            @* <button @onclick="() => RemoveTest(item.Id)">Remove</button> *@
                        </h5>
                        <h6>
                            @foreach (var response in test.Responses!)
                            {
                                @(response.Name  + " / Score: " + @response.Score);
                                <br />
                            }
                        </h6>
                    </div>
                </p>
            </div>
        }
    </div>
</div>


@code {
    [Parameter]
    public PDFData pdfData { get; set; } = new PDFData();
    public List<Response>? _responses { get; set; }

    public async void RemoveTest(Guid testId)
    {
        Console.WriteLine("DELETING...");

        await RemoveTestService.ExecuteAsync(testId);

        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        foreach (var test in pdfData.Tests)
        {
            var result = await ResponsesService.GetFinalizedResponsesAsync(test.Id);

            test.Responses = result.Data;
        }
    }
}