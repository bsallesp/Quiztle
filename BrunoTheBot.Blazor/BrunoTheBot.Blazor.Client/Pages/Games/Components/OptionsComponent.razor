@* @using BrunoTheBot.CoreBusiness.Entities.Quiz
@using BrunoTheBot.CoreBusiness.Entities.Quiz.DTO

@if (Options.Count > 0)
{
    @for (int i = 0; i < Options.Count; i++)
    {
        <div @onclick="() => Select(Options[i])" class="@(Options[0].IsSelected ? "selected" : "")">
            @letters[i] @Options[i].Name
        </div>
        <hr class="line" />
    }
}

@code {
    [Parameter]
    public List<Option> Options { get; set; } = new List<Option>();

    [Parameter]
    public EventCallback<QuestionShotDTO> OnNotify { get; set; }

    private List<string> letters = [ "a)", "b)", "c)", "d)", "e)" ];

    private async Task Select(Option option)
    {
        foreach (var shot in Options) shot.IsSelected = (shot == selectedShot);
        await OnNotify.InvokeAsync(QuestionShot);
    }
}

<style>
    .line {
        border: 0;
        height: 1px;
        background-color: rgba(0, 0, 0, 0.3); 
    }

    .selected {

        background-color: lightgray; 
    }
</style>
 *@