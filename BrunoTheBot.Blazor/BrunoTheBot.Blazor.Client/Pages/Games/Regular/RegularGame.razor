@page "/Games/Regular/{bookId}"
@page "/Games/Regular/"
@using BrunoTheBot.Blazor.Client.APIServices.RegularGame
@using BrunoTheBot.CoreBusiness.Entities.Quiz.DTO
@using BrunoTheBot.Blazor.Client.Pages.Games.Components

@inject NavigationManager Nav
@inject GetAllQuestionsToRegularGame GetAllQuestionsFromBookService

<FinishButtonComponent></FinishButtonComponent>

<h1>Test your knowledge</h1>

@foreach (var question in questions)
{
    <QuestionComponent questionQuiz="question"></QuestionComponent>
}

@code {
    [Parameter]
    public string bookId { get; set; } = "";
    private List<string> shots = [];
    List<QuestionGameDTO> questions = new();

    private static Random rng = new Random();

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            int bookIdInt;
            if (int.TryParse(bookId, out bookIdInt))
            {
                questions = await GetAllQuestionsFromBookService.ExecuteAsync(bookIdInt);
            }
            else
            {
                Nav.NavigateTo("", true);
            }
        }
        catch (Exception ex)
        {
            // Registre a exceção para fins de depuração
            Console.WriteLine($"An error occurred: {ex}");

            // Lança uma nova exceção com uma mensagem mais informativa
            throw new Exception("An error occurred while processing the book. See inner exception for details.", ex);
        }


        await base.OnParametersSetAsync();
    }
}


<script>
    // Função para adicionar classe de brilho aleatoriamente
    function adicionarBrilho() {
        var whatsappIcon = document.querySelector('#whatsapp'); // Seleciona o ícone do WhatsApp
        var brilho = Math.random() >= 0.5; // Determina aleatoriamente se o brilho será aplicado

        if (brilho) {
            whatsappIcon.classList.add('brilho'); // Adiciona a classe de brilho
        } else {
            whatsappIcon.classList.remove('brilho'); // Remove a classe de brilho
        }
    }

    // Chama a função para adicionar brilho após um intervalo de tempo aleatório entre 3 e 6 segundos
    setInterval(adicionarBrilho, Math.random() * (6000 - 3000) + 3000);
</script>