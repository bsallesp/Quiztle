@page "/Profile"
@using Quiztle.Frontend.Client.Utils
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@inject GetUserInfos GetUserInfos

<AuthorizeView>
    <Authorized>
        <MudContainer Style="margin-top: 40px; padding: 20px; background-color: rgba(0, 0, 0, 0.05);" MaxWidth="MaxWidth.Medium">
            <h3>Profile</h3>
            <h4>Email:</h4>
            <h5>@context.User.Identity?.Name</h5>
            <div class="nav-item px-3">
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="returnUrl" value="@currentUrl" />
                    <button type="submit" class="nav-link">
                        <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                    </button>
                </form>
            </div>
        </MudContainer>
    </Authorized>
</AuthorizeView>

@code {
    private string? currentUrl;

    protected override async void OnInitialized()
    {
        if (!(await GetUserInfos.IsAuthenticated())) NavigationManager.NavigateTo("/");

        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        UpdateAntiforgeryToken();
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        UpdateAntiforgeryToken();
        StateHasChanged();
    }

    private void UpdateAntiforgeryToken()
    {
        var httpContext = HttpContextAccessor.HttpContext;
        if (httpContext != null)
        {
            Antiforgery.GetAndStoreTokens(httpContext);
        }
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
