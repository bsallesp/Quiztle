@page "/Buy"
@page "/Buy/{priceId}/testid/{testId}"

@using Microsoft.AspNetCore.Authorization
@using Quiztle.CoreBusiness.Entities.Paid
@using Quiztle.Frontend.Client.APIServices
@using Quiztle.Frontend.Client.APIServices.StripeService
@using Quiztle.Frontend.Client.Utils.LoadingScreen

@inject StripeSessionsService StripeSessionsService
@inject StripeCustomerService StripeCustomerService
@inject GetUserInfos GetUserInfos
@inject PaidService PaidService

@rendermode InteractiveServer

@if (_showLoadingScreen)
{
    <LoadingScreenComponent></LoadingScreenComponent>
}

@code {
    [Parameter] public string priceId { get; set; } = "";
    [Parameter] public string testId { get; set; } = "";
    private string _finalURL = "";
    private bool _showLoadingScreen = true;

    protected override Task OnParametersSetAsync()
    {
        _ = CreateSession();
        return base.OnParametersSetAsync();
    }
    

    private async Task CreateSession()
    {
        var email = await GetUserInfos.GetUserEmail();

        Paid paid = new()
        {
            UserEmail = email,
            PriceId = priceId
        };

        var sessionStartDTO = new SessionStartDTO
        {
            Email = paid.UserEmail,
            PriceId = priceId,
            TestId = testId
        };

        Console.WriteLine(priceId);

        var sessionURL = await StripeSessionsService.CreateSession(sessionStartDTO);

        _finalURL = sessionURL;
        Nav.NavigateTo(sessionURL);
    }
}