@page "/Buy"
@page "/Buy/{priceId}/testid/{testId}"

@using Microsoft.AspNetCore.Authorization
@using Quiztle.CoreBusiness.Entities.Paid
@using Quiztle.Frontend.Client.APIServices
@using Quiztle.Frontend.Client.APIServices.StripeService

@inject StripeSessionsService StripeSessionsService
@inject StripeCustomerService StripeCustomerService
@inject GetUserInfos GetUserInfos
@inject PaidService PaidService

@attribute [Authorize]

@code {
    [Parameter]
    public string priceId { get; set; } = "";

    [Parameter]
    public string testId { get; set; } = "";

    private bool isDone = false;

    private string _finalURL = "";

    protected override async Task OnParametersSetAsync()
    {
        var email = await GetUserInfos.GetUserEmail();
        Console.WriteLine(email);

        Paid paid = new()
            {
            UserEmail = email,
                PriceId = priceId
            };


        if (!(await PaidService.IsPaidService(paid)))
        {
            var sessionStartDTO = new SessionStartDTO
                {
                    Email = paid.UserEmail,
                    PriceId = paid.PriceId
                };

            Console.WriteLine(paid.UserEmail);

            var sessionURL = await StripeSessionsService.CreateSession(sessionStartDTO);

            Nav.NavigateTo(sessionURL, true);
        }
    }
}
