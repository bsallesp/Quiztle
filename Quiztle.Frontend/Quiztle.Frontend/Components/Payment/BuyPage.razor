@page "/Buy"
@page "/Buy/{priceId}/testid/{testId}"

@using Microsoft.AspNetCore.Authorization
@using Quiztle.CoreBusiness.Entities.Paid
@using Quiztle.Frontend.Client.APIServices
@using Quiztle.Frontend.Client.APIServices.StripeService

@inject StripeSessionsService StripeSessionsService
@inject StripeCustomerService StripeCustomerService
@inject GetUserInfos GetUserInfos
@inject PaidService PaidService

@attribute [Authorize]

@code {
    [Parameter]
    public string priceId { get; set; } = "";

    [Parameter]
    public string testId { get; set; } = "";

    private bool isDone = false;

    private string _finalURL = "";


    protected override async Task OnInitializedAsync()
    {
        var isPaid = await IsPaid();

        if (isPaid)
        {
            Console.WriteLine("ispaid");
            Nav.NavigateTo("/");
        }

        else if (!isPaid)
        {
            Console.WriteLine("is not paid");
            Nav.NavigateTo(_finalURL);
        }
    }

    private async Task<bool> IsPaid()
    {
        var email = await GetUserInfos.GetUserEmail();

        Paid paid = new()
            {
                UserEmail = email,
                PriceId = priceId
            };


        if (!(await PaidService.IsPaidService(paid)))
        {
            var sessionStartDTO = new SessionStartDTO
                {
                    Email = paid.UserEmail,
                    PriceId = paid.PriceId
                };

            var sessionURL = await StripeSessionsService.CreateSession(sessionStartDTO);

            _finalURL = sessionURL;
            return false;
        }

        return true;
    }
}
