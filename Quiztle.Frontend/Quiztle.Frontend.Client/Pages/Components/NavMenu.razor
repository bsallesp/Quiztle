@inject IJSRuntime JSRuntime
@rendermode InteractiveAuto

@using Quiztle.Frontend.Client.Pages.Components.ProfileComponents

@inject NavigationManager NavigationManager

<!-- Menu Expandido -->
<div id="menu1" class="main-menu-div">
    <a href="/" class="logo-link">
        <div class="logo-div">
            quiztle
        </div>
    </a>

    <div id="wide-menu">
        <div class="menu-item">
            <a href="/">
                Home
            </a>
        </div>
        <div class="menu-item">
            <a href="/about">
                About
            </a>
        </div>
        <div class="menu-item">
            <a href="/create-order">
                Pricing
            </a>
        </div>
        <div class="menu-item">
            <a href="/support">
                Support
            </a>
        </div>
        <div class="menu-item">
            <a href="/company">
                Company
            </a>
        </div>
        <LoginProfileComponent></LoginProfileComponent>
    </div>
</div>

<!-- Menu Comprimido -->
<div id="menu2" class="main-menu-div" style="display: none;">
    
    <div id="hamburger-menu">
        <MudButton Variant="Variant.Text" OnClick="@(() => OpenDrawer(Anchor.Start))">
            <MudIcon Size="Size.Large" Icon="@Icons.Material.Filled.Menu" Color="Color.Tertiary" />
        </MudButton>
    </div>

    <a href="/" class="logo-link">
        <div class="logo-div">
            quiztle
        </div>
    </a>

    <LoginProfileComponent></LoginProfileComponent>
</div>

<MudDrawer @bind-Open="@open" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6">My App</MudText>
    </MudDrawerHeader>
    <MudNavMenu>
        <MudNavLink Match="NavLinkMatch.All">Home</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All">About</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All">Pricing</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All">Support</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All">Company</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All">Login</MudNavLink>
    </MudNavMenu>
    <LoginProfileComponent></LoginProfileComponent>
</MudDrawer>

@code {
    bool open;
    Anchor anchor;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("toggleMenuBasedOnWidth");
        }
    }

    void OpenDrawer(Anchor anchor)
    {
        open = true;
        this.anchor = anchor;
    }
}

<script>
    window.toggleMenuBasedOnWidth = function () {
        const width = window.innerWidth;
        const menu1 = document.getElementById('menu1');
        const menu2 = document.getElementById('menu2');

        if (width <= 770) {
            menu1.style.display = 'none';
            menu2.style.display = 'flex';
        } else {
            menu1.style.display = 'flex';
            menu2.style.display = 'none';
        }

        // Reagir à redimensionamentos da janela
        window.addEventListener('resize', function () {
            const width = window.innerWidth;
            if (width <= 770) {
                menu1.style.display = 'none';
                menu2.style.display = 'flex';
            } else {
                menu1.style.display = 'flex';
                menu2.style.display = 'none';
            }
        });
    }
</script>
