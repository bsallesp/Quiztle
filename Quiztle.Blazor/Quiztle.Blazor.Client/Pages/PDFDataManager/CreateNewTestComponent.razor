@using Quiztle.Blazor.Client.APIServices.Tests
@using Quiztle.CoreBusiness.Entities.PDFData
@using Quiztle.CoreBusiness.Entities.Quiz
@using Quiztle.CoreBusiness.Utils

@inject CreateTestService CreateTestService
@inject NavigationManager NavigationManager

<div class="bg-light p-2 b-2">
    <h5>
        Get new Test
    </h5>
    <div class="container">
        <form>
            <div class="mb-3">
                <label for="Name" class="form-label">Name</label>
                <input type="text" class="form-control" id="startPage" @bind="name">
            </div>
            <div class="mb-3">
                <label for="startPage" class="form-label">Start Page</label>
                <input type="number" class="form-control" id="startPage" @bind="startPage">
            </div>

            <div class="mb-3">
                <label for="endPage" class="form-label">End Page</label>
                <input type="number" class="form-control" id="endPage" @bind="endPage">
            </div>
            <button class="btn btn-primary" @onclick="CreateTest" disabled="@disabledButton">Submit</button>
        </form>
    </div>
</div>

@code {
    [Parameter]
    public Guid pdfdataId { get; set; } = new Guid();

    APIResponse<Test> apiTest = new APIResponse<Test> { Data = new Test() };

    public string name = "";
    public int startPage = 1, endPage;
    private bool disabledButton = false;

    private async Task CreateTest()
    {
        try
        {
            disabledButton = true;
            apiTest = await CreateTestService.ExecuteAsync(pdfdataId, name, startPage, endPage);
            Thread.Sleep(10000);
            if (apiTest.Status != CustomStatusCodes.SuccessStatus) Console.WriteLine(apiTest.Message);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating test: {ex.Message}");
        }
        finally
        {
            disabledButton = false;
        }
    }
}
