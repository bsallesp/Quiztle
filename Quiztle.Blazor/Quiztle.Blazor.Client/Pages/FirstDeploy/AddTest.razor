@page "/AddTest"
@using Quiztle.CoreBusiness.Entities.PDFData
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JS

<div class="main-div">
    <div class="title-basic">
        <h3>Create your own Quiz</h3>
    </div>

    <div class="div-topic ban">

        <h5>
            1: Fill the topic (max length: 40)
        </h5>
        <input id="input-topic"
               class="input-topic"
               oninput="OnTopicChangeAsync()"
               placeholder="What do you want to read and learn about?"
               maxlength="40" />

        <div id="topic-count">
            0 caracteres
        </div>

        <button id="btn-topic"
                class="btn-primary button-topic"
                @onclick="GenerateCode"
        >
            Generate ChatGPT Script
        </button>
    </div>


    <h5>
        2: Get the code and paste in <a href="https://chatgpt.com" target="_blank">chatgpt</a>
    </h5>
    <input id="script-input" disabled="disabled" @bind-value="_generatedCode" class="input-topic" placeholder="" maxlength="40" />
    <button id="copy-button" onclick="CopyScript()">Copy ChatGPT Script</button>
</div>

<script>
    function OnTopicChangeAsync() {
        const input = document.getElementById("input-topic");
        const button = document.getElementById("btn-topic");
        const topicCount = document.getElementById("topic-count");


        // Atualiza a contagem de caracteres
        const charCount = input.value.length;
        topicCount.textContent = charCount + ' caracteres';

        // Habilita ou desabilita o botão com base na entrada do usuário
        button.disabled = input.value.trim() === "";
    }

    function init() {
        // Inicializa o estado do botão ao carregar a página
        OnTopicChangeAsync();

        // Adiciona o evento de input para o campo
        document.getElementById('input-topic').addEventListener('input', OnTopicChangeAsync);
    }

    function CopyScript() {
        const scriptInput = document.getElementById("script-input");

        // Seleciona o conteúdo do input
        scriptInput.select();
        scriptInput.setSelectionRange(0, 99999); // Para dispositivos móveis

        // Copia o texto para a área de transferência
        navigator.clipboard.writeText(scriptInput.value).then(() => {
            alert("Texto copiado: " + scriptInput.value);
        }).catch(err => {
            console.error('Erro ao copiar texto: ', err);
        });
    }
</script>

@code {
    private string _generatedCode = "";


    private void GenerateCode()
    {
        _generatedCode = "teste123";
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("init");
        }
    }

    private string GetCode(string topic, string language)
    {
        
        
        return "";
    }
}