@inject NavigationManager Navigation

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.5/font/bootstrap-icons.min.css">

<div class="container-tests">
    @foreach (var i in listTests.Data)
    {
        <div class="test-item">
            <div class="test-content">
                <div class="text-test m-2">
                    @i.Name
                    <div class="mt-4" style="font-size: 15px;">
                        <span class="badge-test rounded-pill text-bg-success">
                            <i class="fas fa-lightbulb"></i>
                            @i.Questions.Count questions
                        </span>
                    </div>
                </div>
                <a href="/Games/Arcade/@i.Id/1" class="play-button">
                    <div class="icon-text">
                        <i class="bi bi-play-circle"></i>
                    </div>
                </a>
            </div>
@*             <div class="share-links">
                <a href="https://www.linkedin.com/shareArticle?mini=true&url=@Uri.EscapeDataString(Navigation.Uri)" target="_blank" class="btn btn-outline-primary me-2">
                    <i class="bi bi-linkedin"></i>
                </a>
                <a href="https://www.instagram.com/?url=@Uri.EscapeDataString(Navigation.Uri)" target="_blank" class="btn btn-outline-danger me-2">
                    <i class="bi bi-instagram"></i>
                </a>
                <a href="https://www.facebook.com/sharer/sharer.php?u=@Uri.EscapeDataString(Navigation.Uri)" target="_blank" class="btn btn-outline-primary me-2">
                    <i class="bi bi-facebook"></i>
                </a>
                <a href="https://twitter.com/intent/tweet?url=@Uri.EscapeDataString(Navigation.Uri)" target="_blank" class="btn btn-outline-info">
                    <i class="bi bi-twitter"></i>
                </a>
            </div> *@
        </div>
    }
</div>

@code {
    private bool _isEmpty = true;

    private APIResponse<List<Test>> listTests = new APIResponse<List<Test>>
        {
            Data = new List<Test>()
        };

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        listTests = await GetAllTestsService.ExecuteAsync(true);
        _isEmpty = false;
    }
}
