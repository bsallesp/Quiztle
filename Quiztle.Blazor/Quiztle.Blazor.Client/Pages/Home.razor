@* @page "/"
@page "/API"

@using System.Text.Json
@using Quiztle.CoreBusiness.Entities.Course
@using Quiztle.CoreBusiness.Log
@using CoreBusiness.Entities
@using Newtonsoft.Json.Linq
@using Quiztle.CoreBusiness.APIEntities

@inject GetAllBooksService GetAllBooksService

@inject IConfiguration Configuration

<PageTitle>Home</PageTitle>

<Quiztle.Blazor.Client.Pages.CreateBook.CreateBookTaskComponent>
</Quiztle.Blazor.Client.Pages.CreateBook.CreateBookTaskComponent>

@* @CheckRenderSide.GetOSDescription()
<hr />
@CheckRenderSide.GetOS()

<h5>
    @urlAPI
</h5>
<h5>
    @connString
</h5> *@

@* 
<div class="book-list">
    @foreach (var book in Books)
    {
        <div class="book-item p-2">
            <h5><a href="book/@book.Id">@book.Name</a></h5>
            <a class="play-game-link" href="/Games/Regular/@book.Id">Play Game</a>
        </div>
    }
</div>

@code {

    private List<Book> Books = [];
    private APIResponse<List<Book>> booksAPIResponse = new APIResponse<List<Book>>
    {
            Data = new List<Book>()
    };

    private string connString = "";
    private string urlAPI = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var booksAPIResponse = await GetAllBooksService.ExecuteAsync();

            if (booksAPIResponse.Data != null)
            {
                var booksList = booksAPIResponse.Data.ToList();

                foreach (var book in booksList)
                {
                    Books.Add(book);
                    Console.WriteLine($"Added book: {book.Name}");
                }
            }
            else
            {
                Console.WriteLine("No books found in the API response.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }

        try
        {
            urlAPI = Configuration["localAPIURL"] ?? "localAPIURL NOT FOUND";

            connString = Configuration["ConnectionString"] ?? "ConnectionString NOT FOUND";
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }

    }
} *@ 