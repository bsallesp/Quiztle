@page "/Book/{bookId}"
@using Quiztle.CoreBusiness.APIEntities
@using Quiztle.CoreBusiness.Entities.Course
@inject RetrieveBookByIdService RetrieveBookByIdService
@inject CodeExtraction CodeExtraction

@if (bookAPIResponse != null && bookAPIResponse.Data != null)
{
    <h1>@bookAPIResponse.Data.Name</h1>

    @foreach (var chapter in bookAPIResponse.Data.Chapters)
    {
        <h2>@chapter.Name</h2>
        @foreach (var sectionObj in chapter.Sections)
        {
            <b>@sectionObj.Name</b>
            <p>
                @foreach (var item in CodeExtraction.ExtractCode(sectionObj.Content.Text!))
                {
                    @if (item.Key == "text")
                    {
                        <span>@item.Value</span>
                    }
                    else if (item.Key == "code")
                    {
                        <pre><code>@item.Value</code></pre>
                    }
                }
            </p>
        }
    }
}

@code {
    private APIResponse<Book> bookAPIResponse = new APIResponse<Book>
        {
            Data = new Book()
        };

    [Parameter]
    public string BookId { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        if (!Guid.TryParse(BookId, out Guid bookId))
        {
            return;
        }

        bookAPIResponse = await RetrieveBookByIdService.ExecuteAsync(bookId);
    }
}
