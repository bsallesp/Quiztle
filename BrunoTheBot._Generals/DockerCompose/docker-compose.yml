services:
  brunothebot-api:
    ports:
      - "5041:8080"
      - "5042:443"
    image: brunosallesdev/brunothebotapi:devenv
    container_name: brunothebot-api
    volumes:
      - pdf-bucket-volume:/bucket:rw
      - c:/bucket:/bucket:rw
      # Only in Development Envirovment
      - C:/Users/bsall/source/repos/BrunoTheBot.Blazor/BrunoTheBot.API/bin/Release/net8.0/publish:/app
    environment:
      - PROD_FLASK_API_URL=${PROD_FLASK_API_URL}
      - PROD_POSTGRES_CONNECTION_STRING=${PROD_POSTGRES_CONNECTION_STRING}
      - PDF_DIRECTORY=/bucket
    networks:
      - brunothebot-network

  brunothebot-blazor: #DEV
    ports:
      - "5001:8080"
      - "5002:443"
    image: brunosallesdev/brunothebotblazor:devenv
    volumes:
      # Only in Development Envirovment
      - C:/Users/bsall/source/repos/BrunoTheBot.Blazor/BrunoTheBot.Blazor/BrunoTheBot.Blazor/bin/Release/net8.0/publish:/app
    container_name: brunothebot-blazor #DEV
    environment:
      - PROD_POSTGRES_CONNECTION_STRING=${PROD_POSTGRES_CONNECTION_STRING}
      - PROD_API_URL=${PROD_API_URL}
      - PROD_FLASK_API_URL=${PROD_FLASK_API_URL}
    networks:
      - brunothebot-network

  nginx:
    image: brunosallesdev/nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx-conf-d-volume:/etc/nginx/conf.d
    networks:
      - brunothebot-network
      - thelaserspace-network
    depends_on:
      - brunothebot-api
      - brunothebot-blazor

  thelaserspace:
    image: brunosallesdev/thelaserspace2024:latest
    ports:
      - "5044:8080"
      - "5045:443"
    container_name: thelaserspace
    networks:
      - thelaserspace-network

  brunothebot-postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    container_name: brunothebot-postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - brunothebot-network
    volumes:
      - brunothebot-postgres-data:/var/lib/postgresql/data

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    ports:
      - "8000:8000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - brunothebot-network

  adminer:
    image: adminer
    
    restart: always
    ports:
      - 8081:8080
    networks:
      - brunothebot-network
  
  pdf-api:
    build: .  
    image: brunosallesdev/pdf-api:latest
    container_name: pdf-api-flask
    ports:
      - "5090:5000"
    volumes:
      -  pdf-bucket-volume:/bucket/
    environment:
      BUCKET_PATH: ${BUCKET_PATH}
      OUTPUT_FILES: ${OUTPUT_FILES}
      PARTIAL_OUTPUT_RATE: ${PARTIAL_OUTPUT_RATE}
    networks:
      - brunothebot-network

volumes:
  nginx-conf-d-volume:
  portainer_data:
  brunothebot-postgres-data:
  pdf_input_volume:
  output_volume:
  pdf-bucket-volume:
    driver: local
    driver_opts:
      type: none
      device: c:/bucket
      o: bind

networks:
  brunothebot-network:
    name: brunothebot-network
    driver: bridge
  thelaserspace-network:
    name: thelaserspace-network
